name: Python package

on: [push]

env:
  QA_FILES: src/*.py src/admin/*.py src/game_board/*.py src/hardware/*.py src/utils/*.py simulator/*.py

jobs:
  ruff:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install ruff
      - name: Lint with ruff
        id: ruff
        run: |
          cd python
          ruff check --output-format=github $QA_FILES
  mypy:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install mypy types-requests -r python/requirements.txt
      - name: Check with mypy
        id: mypy
        run: |
          cd python
          mypy $QA_FILES --output=json | jq -r '"::error title=mypy issue,file=\(.file),line=\(.line),col=\(.column)::\(.message)"'
          exit ${PIPESTATUS[0]}

  pylint:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install pylint -r python/requirements.txt
      - name: Check with pylint
        id: pylint
        run: |
          cd python
          pylint -j 2 --output-format=github $QA_FILES

  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install -r python/requirements.txt
      - name: Test with unittest
        id: unittest
        run: |
          cd python
          cp defaults/* work/
          python -m unittest discover -s test -p "test_*.py" -v

#
#  npm-build:
#    runs-on: ubuntu-latest
#    env:
#      PYTHONPATH: 'src:'
#    steps:
#      - uses: actions/checkout@v5
#        with:
#          fetch-tags: 'true'
#      - name: Clean install dependencies and build
#        run: |
#          cd react
#          npm ci
#          npm run build
