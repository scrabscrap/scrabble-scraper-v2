name: Python package

on: [push]

env:
  QA_FILES: "src/ src/admin/ src/hardware/ src/game_board/ src/utils/ simulator/"

jobs:
  ruff:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install ruff
      - name: Lint with ruff
        id: ruff
        run: |
          cd python
          ruff check --output-format=github $QA_FILES

  pyright:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install pyright -r python/requirements.txt
      - name: Run pyright on source directories
        id: pyright
        run: |
          cd python
          echo "Running Pyright type checks..."
          pyright $QA_FILES --outputjson | jq -r '
              .generalDiagnostics[] |
              if .severity == "error" then
                "::error file=\(.file),line=\(.range.start.line+1),col=\(.range.start.character+1)::[\(.rule // "unknown")] \(.message)"
              else
                "::warning file=\(.file),line=\(.range.start.line+1),col=\(.range.start.character+1)::[\(.rule // "unknown")] \(.message)"
              end
            '
          exit ${PIPESTATUS[0]}

  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: 'src:'
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install pip dependencies
        run: pip install -r python/requirements.txt
      - name: Test with unittest
        id: unittest
        run: |
          cd python
          cp defaults/* work/
          python -m unittest discover -s test -p "test_*.py" -v
